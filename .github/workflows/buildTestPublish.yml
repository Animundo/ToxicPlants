name: Build, test en deploy

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: ToxicPlantsFunction
  WORKING_DIRECTORY: Function
  OUTPUT: Dotnetpublishfolder
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build-and-deploy:
    name: Build, test en deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Add 3.1 bug
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Begin Sonar scan
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /o:animundo /k:Animundo_ToxicPlants /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url=https://sonarcloud.io
      - name: Build
        run: dotnet build --configuration Debug
      - name: Unit Test
        working-directory: ./Function.Test
        run: dotnet test --no-build --no-restore --verbosity normal -p:CollectCoverage=true -p:CoverletOutputFormat=opencover
      - name: Integration Test
        working-directory: ./Function.IT
        run: dotnet test --no-restore --verbosity normal
      - name: End Sonar scan
        run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
      - name: dotnet publish
        run: dotnet publish --configuration Release --output '${{ env.OUTPUT }}'
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.SCM_CREDENTIALS }}
          package: '${{ env.WORKING_DIRECTORY }}/${{ env.OUTPUT }}'
